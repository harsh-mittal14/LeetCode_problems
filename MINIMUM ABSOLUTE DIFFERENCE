// MINIMUM ABSOLUTE DIFFERENCE





/* Given an array of distinct integers arr, find all pairs of elements with the minimum absolute difference of any two elements.

Return a list of pairs in ascending order(with respect to pairs), each pair [a, b] follows

a, b are from arr
a < b
b - a equals to the minimum absolute difference of any two elements in arr
 

Example 1:

Input: arr = [4,2,1,3]
Output: [[1,2],[2,3],[3,4]]
Explanation: The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.
Example 2:

Input: arr = [1,3,6,10,15]
Output: [[1,3]]
Example 3:

Input: arr = [3,8,-10,23,19,-4,-14,27]
Output: [[-14,-10],[19,23],[23,27]]

*/







import java.util.*;
class Solution {
    public List<List<Integer>> minimumAbsDifference(int[] arr) {
        Arrays.sort(arr);
        int min=Integer.MAX_VALUE;

        int i=0;
        int j=i+1;
        while(j<arr.length){
            int k=arr[j]-arr[i];
            if(k<0){
                k=k*(-1);
            }
            min=Math.min(min,k);
            j++;
            i++;
        }
        List<List<Integer>> r=new ArrayList<>();

        i=0;
        j=i+1;
        while(j<arr.length){
            int k=arr[j]-arr[i];
            if(k<0){
                k=k*(-1);
            }
            if(k==min){
                List<Integer> a=new ArrayList<>();
                a.add(arr[i]);
                a.add(arr[j]);
                r.add(a);
            }
            i++;
            j++;
        }
        return r;
    }
}
